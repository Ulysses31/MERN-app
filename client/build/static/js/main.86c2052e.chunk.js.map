{"version":3,"sources":["context/moviesReducer.js","context/globalState.js","components/movies/movieForm.js","components/movies/moviesList.js","App.js","index.js"],"names":["MoviesReducer","state","action","type","selectedMovie","payload","movies","filter","movie","_id","map","initialState","title","genre","year","createdAt","GlobalContext","createContext","GlobalContextProvider","children","useReducer","dispatch","Provider","value","setSelectedMovie","getMovies","fetch","then","data","ok","json","catch","err","console","log","addMovie","deleteMovie","id","updateMovie","MovieForm","useContext","useState","newMovie","setNewMovie","useEffect","handleNewMovie","e","target","name","cleanupForm","onSubmit","preventDefault","method","headers","body","JSON","stringify","resp","nModified","placeholder","onChange","onClick","MoviesList","deletedCount","editMovie","App","className","container","document","getElementById","ReactDOM","render","StrictMode","debugContextDevtool","debugReducer","process","debugContext","disable"],"mappings":"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","file":"static/js/main.86c2052e.chunk.js","sourcesContent":["export default function MoviesReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'SELECTED_MOVIE':\r\n      return {\r\n        ...state,\r\n        selectedMovie: action.payload\r\n      };\r\n    case 'GET_MOVIES':\r\n      return {\r\n        ...state,\r\n        movies: action.payload\r\n      };\r\n    case 'ADD_MOVIE':\r\n      return {\r\n        ...state,\r\n        movies: [...state.movies, action.payload]\r\n      };\r\n    case 'DELETE_MOVIE':\r\n      return {\r\n        ...state,\r\n        movies: state.movies.filter(\r\n          (movie) => movie._id !== action.payload\r\n        )\r\n      };\r\n    case 'UPDATE_MOVIE':\r\n      return {\r\n        ...state,\r\n        movies: state.movies.map((movie) => {\r\n          if (movie._id === action.payload._id) {\r\n            return action.payload;\r\n          } else {\r\n            return movie;\r\n          }\r\n        })\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MoviesReducer from './moviesReducer';\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  selectedMovie: {\r\n    _id: 0,\r\n    title: '',\r\n    genre: '',\r\n    year: '',\r\n    createdAt: ''\r\n  }\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport default function GlobalContextProvider({\r\n  children\r\n}) {\r\n  const [state, dispatch] = useReducer(\r\n    MoviesReducer,\r\n    initialState\r\n  );\r\n\r\n  const getMovies = () => {\r\n    fetch('/movies')\r\n      .then((data) => {\r\n        if (data.ok) {\r\n          return data.json();\r\n        }\r\n      })\r\n      .then((payload) => {\r\n        dispatch({\r\n          type: 'GET_MOVIES',\r\n          payload: payload\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const addMovie = (movie) => {\r\n    dispatch({\r\n      type: 'ADD_MOVIE',\r\n      payload: movie\r\n    });\r\n  };\r\n\r\n  const deleteMovie = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_MOVIE',\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  const updateMovie = (movie) => {\r\n    dispatch({\r\n      type: 'UPDATE_MOVIE',\r\n      payload: movie\r\n    });\r\n  };\r\n\r\n  const setSelectedMovie = (movie) => {\r\n    dispatch({\r\n      type: 'SELECTED_MOVIE',\r\n      payload: movie\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        movies: state.movies,\r\n        selectedMovie: state.selectedMovie,\r\n        setSelectedMovie,\r\n        getMovies,\r\n        addMovie,\r\n        deleteMovie,\r\n        updateMovie\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\n// ****** Props Validations ********\r\nGlobalContextProvider.propTypes = {\r\n  children: PropTypes.object.isRequired\r\n};\r\n","import React, {\r\n  useContext,\r\n  useEffect,\r\n  useState\r\n} from 'react';\r\nimport { GlobalContext } from '../../context/globalState';\r\nimport './movies.css';\r\n\r\nfunction MovieForm() {\r\n  const {\r\n    addMovie,\r\n    updateMovie,\r\n    selectedMovie,\r\n    setSelectedMovie\r\n  } = useContext(GlobalContext);\r\n  const [newMovie, setNewMovie] = useState({\r\n    _id: 0,\r\n    title: '',\r\n    genre: '',\r\n    year: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setNewMovie(selectedMovie);\r\n    console.log(selectedMovie);\r\n  }, [selectedMovie]);\r\n\r\n  const handleNewMovie = (e) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(newMovie);\r\n\r\n    if (newMovie) {\r\n      if (newMovie._id === 0) {\r\n        // INSERT\r\n        fetch('/movies', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(newMovie)\r\n        })\r\n          .then((resp) => {\r\n            return resp.json();\r\n          })\r\n          .then((payload) => {\r\n            addMovie(payload);\r\n          });\r\n      } else {\r\n        // UPDATE\r\n        fetch('/movies', {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(newMovie)\r\n        })\r\n          .then((resp) => {\r\n            return resp.json();\r\n          })\r\n          .then((payload) => {\r\n            if (payload.nModified === 1) {\r\n              updateMovie(newMovie);\r\n            }\r\n          });\r\n      }\r\n      cleanupForm();\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    cleanupForm();\r\n  };\r\n\r\n  const cleanupForm = () => {\r\n    setSelectedMovie({\r\n      _id: 0,\r\n      title: '',\r\n      genre: '',\r\n      year: 0\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        placeholder='Title'\r\n        name='title'\r\n        value={newMovie.title}\r\n        onChange={handleNewMovie}\r\n      />\r\n      <br />\r\n      <input\r\n        type='text'\r\n        placeholder='Genre'\r\n        name='genre'\r\n        value={newMovie.genre}\r\n        onChange={handleNewMovie}\r\n      />\r\n      <br />\r\n      <input\r\n        type='text'\r\n        placeholder='Year'\r\n        name='year'\r\n        value={newMovie.year}\r\n        onChange={handleNewMovie}\r\n      />\r\n      <br />\r\n      <button type='submit'>\r\n        {newMovie._id === 0 ? 'Insert' : 'Update'}\r\n      </button>\r\n      <button type='button' onClick={handleClear}>\r\n        Clear\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../../context/globalState';\r\nimport './movies.css';\r\n\r\nfunction MoviesList() {\r\n  const {\r\n    movies,\r\n    getMovies,\r\n    deleteMovie,\r\n    setSelectedMovie\r\n  } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  function removeMovie(id) {\r\n    if (id) {\r\n      fetch(`/movies/${id}`, {\r\n        method: 'DELETE'\r\n      })\r\n        .then((resp) => {\r\n          return resp.json();\r\n        })\r\n        .then((payload) => {\r\n          if (payload.deletedCount === 1) {\r\n            deleteMovie(id);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n\r\n  function editMovie(movie) {\r\n    // console.log(movie);\r\n    setSelectedMovie(movie);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Movies</h1>\r\n      {movies &&\r\n        movies.map((movie) => {\r\n          return (\r\n            <div key={movie._id}>\r\n              <h2>{movie.title}</h2>\r\n              <button\r\n                onClick={() => removeMovie(movie._id)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button onClick={() => editMovie(movie)}>\r\n                Edit\r\n              </button>\r\n              <p>Genre: {movie.genre}</p>\r\n              <p>Year: {movie.year}</p>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesList;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport MovieForm from './components/movies/movieForm';\r\nimport MoviesList from './components/movies/moviesList';\r\nimport GlobalContextProvider from './context/globalState';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalContextProvider>\r\n      <div className='App'>\r\n        <MovieForm />\r\n        <hr />\r\n        <MoviesList />\r\n      </div>\r\n    </GlobalContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { debugContextDevtool } from 'react-context-devtool';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst container = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  container\r\n);\r\n\r\n// Attach root container\r\ndebugContextDevtool(container, {\r\n  debugReducer:\r\n    process.env.NODE_ENV !== 'production' && true,\r\n  debugContext:\r\n    process.env.NODE_ENV !== 'production' && true,\r\n  disable: process.env.NODE_ENV === 'production'\r\n});\r\n"],"sourceRoot":""}